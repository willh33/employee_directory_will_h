{"version":3,"sources":["logo.svg","containers/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["styles","tbody","overflowY","table","height","EmployeeTable","props","useState","data","setData","filtered","setFiltered","filter","setFilter","col","order","sort","setSort","searchInput","useRef","useEffect","queryEmployees","a","fetch","res","json","employees","list","results","map","employee","id","value","birthday","gender","name","first","last","profilePic","picture","thumbnail","dob","date","email","phone","sortEmployees","event","field","sortArray","arr","copy","b","className","type","onChange","search","current","length","emp","toLowerCase","includes","searchEmployees","ref","style","onClick","e","row","src","moment","format","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ba632c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useRef} from 'react';\nimport moment from 'moment'\n\nconst employeeUrl = 'https://randomuser.me/api/?results=100';\nconst styles = {\n\ttbody: {\n\t\toverflowY: 'auto'\n\t},\n\ttable: {\n\t\theight: '100%'\n\t}\n};\n\nfunction EmployeeTable(props) {\n\tconst [data, setData] = useState([]);\n\tconst [filtered, setFiltered] = useState([]);\n\tconst [filter, setFilter] = useState(false);\n\tconst [sort, setSort] = useState( {col: 'fullName', order: 1});\n\tconst searchInput = useRef('');\n\n\tuseEffect( () => {\n\t\tqueryEmployees();\n\t}, []);\n\n\tconst queryEmployees = async () => {\n\t\tlet res = await fetch(employeeUrl);\n\t\tlet employees = await res.json();\n\t\tlet list = employees.results.map(employee => (\n\t\t\t{\n\t\t\t\tid: employee.id.value ? employee.id.value : employee.birthday + employee.gender + employee.name.first + employee.name.last,\n\t\t\t\tprofilePic: employee.picture.thumbnail,\n\t\t\t\tbirthday: employee.dob.date,\n\t\t\t\tgender: employee.gender,\n\t\t\t\tname: `${employee.name.first} ${employee.name.last}`,\n\t\t\t\temail: employee.email,\n\t\t\t\tphone: employee.phone\t\n\t\t\t})\n\t\t);\n\t\tsetData(list);\n\t};\n\n\t//Sort the employees by the column clicked\n\tconst sortEmployees = (event, field) => {\n\t\t//Default the sort to sort by ascending\n\t\t//Check if the column we clicked is already the sort, if it is just reeverse it.\n\t\tif(sort.col === field) {\n\t\t\tif(!filter)\n\t\t\t\tsetData( sortArray(data, field, sort.order * -1) )\n\t\t\telse\n\t\t\t\tsetFiltered( sortArray(filtered, field, sort.order * -1) )\n\n\t\t\tsetSort( {col: field, order: sort.order * -1} )\n\t\t}\n\t\telse {\n\t\t\tif(!filter)\n\t\t\t\tsetData( sortArray(data, field, 1) )\n\t\t\telse\n\t\t\t\tsetFiltered( sortArray(filtered, field, 1) )\n\t\t\tsetSort( {col: field, order: 1} )\n\t\t}\n\t};\n\n\tconst sortArray = (arr, field, order) => {\n\t\tlet copy = [...arr];\n\t\tif(order === 1)\n\t\t\tcopy.sort( (a, b) => {\n\t\t\t\tif(a[field] > b[field])\n\t\t\t\t\treturn 1;\n\t\t\t\telse if(b[field]> a[field])\n\t\t\t\t\treturn -1\n\t\t\t\telse\n\t\t\t\t\treturn 0;\n\t\t\t});\n\t\telse\n\t\t\tcopy.sort( (a, b) => {\n\t\t\t\tif(a[field] > b[field])\n\t\t\t\t\treturn -1;\n\t\t\t\telse if(b[field]> a[field])\n\t\t\t\t\treturn 1\n\t\t\t\telse\n\t\t\t\t\treturn 0;\n\t\t\t});\n\t\treturn copy;\n\t}\n\t\n\tconst searchEmployees = () => {\n\t\tlet copy = [...data];\n\t\tlet search = searchInput.current.value;\n\t\tif(search.length > 0)\n\t\t{\n\t\t\tsetFiltered(copy.filter(emp => emp.name.toLowerCase().includes(search) || emp.birthday.includes(search) || emp.gender.toLowerCase().includes(search)));\n\t\t\tsetFilter(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetFiltered([]);\n\t\t\tsetFilter(false);\n\t\t}\n\t};\n\n\tconst handleInputChange = (event) => {\n\t\tsearchEmployees();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>Search:</label>\n\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"usr\" onChange={handleInputChange} ref={searchInput}/>\n\t\t\t</div>\n\t\t\t<table className='table' style={styles.table}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Profile</th>\n\t\t\t\t\t\t<th onClick={e => sortEmployees(e, 'name')}>Name</th>\n\t\t\t\t\t\t<th onClick={e => sortEmployees(e, 'phone')}>Phone</th>\n\t\t\t\t\t\t<th onClick={e => sortEmployees(e, 'email')}>Email</th>\n\t\t\t\t\t\t<th onClick={e => sortEmployees(e, 'birthday')}>Birthday</th>\n\t\t\t\t\t\t<th onClick={e => sortEmployees(e, 'gender')}>Gender</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody style={styles.tbody}>\n\t\t\t\t\t{\n\t\t\t\t\t\t!filter ? \n\t\t\t\t\t\t\tdata.map(row => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={row.id}>\n\t\t\t\t\t\t\t\t\t\t<td><img src={row.profilePic} /></td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.name}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.phone}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.email}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{moment(row.birthday).format(\"MM/DD/YYYY\")}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.gender}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}) \n\t\t\t\t\t\t:\n\t\t\t\t\t\t\tfiltered.map(row => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={row.id}>\n\t\t\t\t\t\t\t\t\t\t<td><img src={row.profilePic} /></td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.name}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.phone}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.email}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{moment(row.birthday).format(\"MM/DD/YYYY\")}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{row.gender}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</>\n\t)\n}\n\nexport default EmployeeTable;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EmployeeTable from './containers/EmployeeTable';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand text-light\" href=\"#\">Employee Directory</a>\n        </div>\n      </nav>\n      <div className=\"container\">\n          <EmployeeTable></EmployeeTable>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}